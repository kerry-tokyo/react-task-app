@mixin fit {
  position: absolute;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
}
@function strip-unit($number) {
  @if type-of($number) == "number" and not unitless($number) {
    @return $number / ($number * 0 + 1);
  }
  @return $number;
}

// Alias for responsive-font mixin
@mixin rf($args...) {
  @include responsive-font($args...);
}
@mixin vertically-responsive($property, $number) {
  #{$property}: $number;
  @if global-variable-exists(scale) {
    @supports (--css: variables) {
      #{$property}: calc(#{$number} * var(--scale-element));
    }
  }
}

//gutter
@mixin gutter {
  padding: 0 $container-gutter;
}

@mixin nav-gutter {
  padding: 3rem $container-gutter;
}

//Container
@mixin container() {
  width: 100%;
  max-width: 1500px;
  margin: 0 auto;
  @include gutter;
}

@mixin js-only {
  html:not(:global(.no-js)) & {
    @content;
  }
}
@mixin no-js {
  html:not(:global(.js)) & {
    @content;
  }
}
@mixin retina {
  @media only screen and (-webkit-min-device-pixel-ratio: 1.3),
    only screen and (-o-min-device-pixel-ratio: 13/10),
    only screen and (min-resolution: 120dpi) {
    @content;
  }
}
// Gsap trans-in defaults
@mixin will-animate($transform: true, $opacity: true) {
  @include js-only {
    @if $opacity == true {
      opacity: 0;
    }
    @if $transform == true {
      will-change: opacity, transform;
    } @else {
      will-change: opacity;
    }
  }
}

//Block Margin

//Flex
@mixin flex($align-items: center, $justify-content: center) {
  display: flex;
  align-items: $align-items;
  justify-content: $justify-content;
}
@mixin inline-flex($align-items: center, $justify-content: center) {
  display: inline-flex;
  align-items: $align-items;
  justify-content: $justify-content;
}

//icon
@mixin icon($icon-size: $icon-size, $icon-color: $black) {
  width: auto;
  height: $icon-size;

  & * {
    fill: $icon-color;
  }
}

@mixin icon-fix($icon-size: $icon-size, $icon-color: $black) {
  width: $icon-size;
  height: $icon-size;

  & * {
    fill: $icon-color;
  }
}
@mixin icon-position {
  position: relative;
  top: -0.05em;
}

@mixin icon-white($icon-size: $icon-size, $icon-color: $black) {
  width: auto;
  height: $icon-size;

  & * {
    fill: $white;
  }
}
//Animations
@mixin scroll {
  transition: $scroll;
  will-change: transform, opacity;
}
@mixin invite-scroll {
  animation: scroll 3s cubic-bezier(0.5, 0.23, 0.38, 0.99) 0s infinite;
  will-change: transform;
}

@keyframes scroll {
  0% {
    transform: translateY(0);
  }

  66% {
    transform: translateY(0);
  }

  30% {
    transform: translateY(40%);
  }
}
@mixin hover-line {
  position: relative;

  &:hover:before {
    transform: scaleX(1);
  }

  &:before {
    content: "";
    position: absolute;
    bottom: 0.04em;
    left: 0;
    width: 100%;
    height: 1px;
    background: currentColor;
    transition: transform $line;
    transform-origin: 0 50%;
    transform: scaleX(0);
    border-radius: $circle;
  }
}
@mixin line-hover {
  position: relative;

  &:hover:before {
    transform: scaleX(0);
  }

  &:before {
    content: "";
    position: absolute;
    bottom: 0.04em;
    left: 0;
    width: 100%;
    height: 1px;
    background: currentColor;
    transition: transform $line;
    transform-origin: 0 50%;
    transform: scaleX(1);
    border-radius: $circle;
  }
}

@mixin line {
  position: relative;

  &:before {
    content: "";
    position: absolute;
    bottom: 0.04em;
    left: 0;
    width: 100%;
    height: 1px;
    background: currentColor;
    transition: transform $line;
    transform-origin: 0 50%;
    transform: scaleX(1);
    border-radius: $circle;
  }
}
//toggle
@mixin faq {
  transition: $show;
  will-change: max-height;
  overflow-y: auto;
}

@mixin data {
  font-size: calc(5rem + (100 - 50) * ((100vw - 375px) / (1500 - 375)));
  line-height: 1;
  margin-bottom: 0.2em;
  font-weight: 700;
  color: $black;
}

//Card
@mixin card {
  overflow: hidden;
  border-radius: $rounded;
  border: $border;
  border-color: $horizontalRule;
  padding: $gutter;
}

@mixin button {
  @include inline-flex;
  position: relative;
  padding: 0.5rem $gutter;
  margin: 0 $gutter;
  cursor: pointer;
  font-size: $font-size;
  font-weight: 500;
  border-radius: $rounded;
  text-align: center;
  text-decoration: none;
  vertical-align: middle;
  background-color: $black;
  border: $border;
  border-color: $black;
  color: $white;
  transition: $fade;
  font-feature-settings: "palt";

  &:hover {
    background-color: lighten($black, 10%);
  }

  &:first-of-type {
    margin-left: 0;
  }

  &:last-of-type {
    margin-right: 0;
  }
}

@mixin badge-development {
  @include inline-flex;
  & h1 {
    align-items: flex-start;
  }
  & .badge {
    background-color: $accent;
    color: $white;
    font-size: $font-size-s;
    font-weight: 500;
    padding: 0.6rem 0.8rem;
    margin-left: 1rem;
    border-radius: $rounded;
    white-space: nowrap;
  }
}
